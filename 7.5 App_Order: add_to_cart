My_Ecom_Project
|----App_Login
|----App_Shop
|----App_Order
|----media
|      |---Products
|      |---Profile_pic
|----static
|      |---css
|      |---js
|----templates
|      |---App_Login
|      |---App_Shop
|      |---App_Order
|      |---Layouts
|      |    |---master.html
|      |---inc
|           |---navbar.html
|----My_Ecom_Project
|----db.sqlite3
|----manage.py


/////models.py of App_Order/////////////////////////////////////////////
-----------------------
from django.db import models
from django.conf import settings
from App_Shop.models import Product

class Cart(models.Model):
	user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, related_name="cart")
	item = models.ForeignKey(Product, on_delete=models.CASCADE)
	quantity = models.IntegerField(default=1)
	purchased = models.BooleanField(default=False)
	created = models.DateTimeField(auto_now_add=True)
	updated = models.DateTimeField(auto_now)

	//to show how many product of each item
	def  __str__(self):
		return f'{self.quantity} x {self.item}'

	//to get item wise total price
	def  get_total(self):
		total = self.item.price * self.quantity
		float_total = format(total, '0.2f')          //2 digit after decimal
		return float_total

class Order(models.Model):
	orderitems = models.ManyToManyField(Cart)
	user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
	ordered = models.BooleanField(default=False)  //if payed, ordered = True
	paymenId = models.CharField(max_length=255, blank=True, null=True)  //tranjection id
	orderId = models.CharField(max_length=255, blank=True, null=True) //random generated id
	
	//to get total of an order
	def get_totals(self):
		total = 0
		for order_item in self.orderitems.all():
			total += float(order_item.get_total())
		return total



                  qty    price     total
-------------------------------------
#tiem 1       3     150     = 450  (cart get_total())
#tiem 2       1     450     = 450  (cart get_total())
-------------------------------------
                      total        = 900 (order get_totals())









////////migration//////////////////////////
py manage.py makemigrations App_Order
py manage.py migrate

///////register in admin of App_Order////////////////////
from django.contrib import admin
from App_Shop.models import Cart, Order

admin.site.register(Cart)
admin.site.register(Order)

///////views.py of App_Order////////////////////////////

from django.shortcuts import render, get_object_or_404, redirect
from django.contrib.auth.decorators import login_required
from django.contrib import message

from App_Order.models import Cart, Order
from App_Shop.models import Product


@login_required
def add_to_cart(request, pk):
	item = get_object_or_404(Product, pk=pk)  //if product item not found, show error page
	order_item = Cart.objects.get_or_create(item=item, user=request.user, purchased=False) //to check, same product already added in cart, if not it will add
	order_qs = Order.objects.filter(user=request.user, ordered=False) // to check current user order is incomplete or not
	if order_qs.exists():
		order = order_qs[0]   //get incomplete order item from order que
		if order.orderitems.filter(item=item).exists():
			order_item[0].quantity += 1
			order_item[0].save()
			messages.info(request, "This item quantity was updated.")
			return redirect("App_Shop:home")
		else:
			order.orderitems.add(order_item[0])
			message.info(request, "This item was added to your cart")
	else:
		order = Order(user=request.user)
		order.save()  //save in order table
		order.orderitems.add(order_item[0])  // add in cart
		message.info(request, "This item was added to your cart")
		return redirect("App_Shop:home")





////////urls.py of App_Order/////////////////////////////////////

from django.urls import path
from App_Order import views

app_name = 'App_Order'

urlpatterns =[
	path('add/<pk>/', views.add_to_cart, name='add'),
	
]




///////HTML//////////////////////////////////////////////////////////////

in product_single.html
-----------------
<a href="{% url 'App_Order:add' pk=object.pk %}">Add To Cart</a>
