///////Create Class name "Person"//////////////////////////////////
class Person:
  def __init__(self, name, age):                       //__init__() function/default constrator is called automatically when create a new object
    self.name = name
    self.age = age
   
   def myfunc(self):
    print("Hello my name is " + self.name)
    

//////Access Class///////////////////////////////////////////////

p1 = Person("John", 36)                                // create object and passing data
personName = p1.name                                   // using object, call property
personAge = p1.age
p1.myfunc()                                            //calling function by object


/////////note start///////////////////////////////////////////////////
It does not have to be named "self" , you can call it whatever you like, 
but it has to be the "first parameter" of any function in the class

    class Person:
      def __init__(mysillyobject, name, age):
        mysillyobject.name = name
        mysillyobject.age = age

      def myfunc(abc):
        print("Hello my name is " + abc.name)

    p1 = Person("John", 36)
    p1.myfunc() 
/////////note end/////////////////////////////////////////////////////


/////Delete Object Properties///////////////
    del p1.age 

/////Delete Objects////////////////////////
    del p1
 
 
 //////The "pass" Statement//////////////////////////

class definitions cannot be empty, but if you for some reason have a class definition with no content, 
put in the pass statement to avoid getting an error.

    class Person:
      pass


/////Simple default constractor declaration system///////////
def _init_(self):
  print("I am default constractor ")
 

