///To connect a MySQL database with Python Django, you need to follow these steps://////////////////////////////

Step-1:
-------------
    Install the Django MySQL Connector: You need to install the Django MySQL Connector to allow Django to connect to a MySQL database. 
    You can install it using pip in command prompt: 
    
    first stop django server (ctrl + c) and copy and run below code. after install, go to settings.py and config the database and after then run server again.

            pip install mysqlclient

Step-2
-------------
Update the "settings.py" file: In the "settings.py" file of your Django project, you need to add the following lines to specify the database 
connection parameters:


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'your_database_name',
        'USER': 'your_database_user',
        'PASSWORD': 'your_database_password',
        'HOST': 'localhost',
        'PORT': '3306',
        "OPTIONS": {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES', innodb_strict_mode=1",
            'charset': 'utf8mb4',
            "autocommit": True,
        }
    }
}

Replace 
1. your_database_name, 
2. your_database_user, 
3. your_database_password 
(with the appropriate values for your database.)

Verify the connection: 
----------------------
You can verify the connection to the database by running the following command:

    python manage.py dbshell

    If the connection is successful, you should see the MySQL prompt.

With these steps, you should be able to connect your MySQL database with Django. You can now use the Django ORM (Object-Relational Mapping) 
to interact with the database using Python code.
